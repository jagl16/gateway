name: Continuous Deployment

on:
  push:
    branches:
      - master
      - production
  pull_request:
    branches:
      - master
      - production

env:
  java: 11.0.x

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      gateway: ${{ steps.filter.outputs.gateway }}

    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          filters: |
            gateway:
              - 'gateway/**/*'

  test:
    runs-on: ubuntu-latest
    needs: [changes]
    if: ${{ needs.changes.outputs.gateway == 'true' }}

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up Java ${{ env.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java }}
      - name: Test Services
        uses: eskatos/gradle-command-action@v1
        with:
          build-root-directory: gateway
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: test

  build:
    runs-on: ubuntu-20.04
    needs: [changes, test]
    if: ${{ needs.changes.outputs.gateway == 'true' }}

    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Install AWS credential helper
        run: |
          sudo apt update
          sudo apt install amazon-ecr-credential-helper
      - name: Set up Java ${{ env.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java }}
      - name: Build, tag and push image to Amazon ECR
        uses: eskatos/gradle-command-action@v1
        with:
          build-root-directory: gateway
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: jib

  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.2
      - name: Validate Terraform
        run: |
          cd .devops/terraform
          terraform init -backend=false
          terraform validate
          terraform fmt -check

  deploy_production:
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Deploy Production
        run: |
          cd .devops/terraform/environments/production
          terraform init
          terraform apply -auto-approve

